name: CI

on:
  push:
    # Don't run this workflow when a tag is pushed.
    branches:
      - '*'
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CBINDGEN_VERSION: 0.13.2
  MSVC_CONFIG: RelWithDebInfo

jobs:
  bintray-cleanup:
    runs-on: ubuntu-18.04

    steps:
      - name: Remove old artifacts from Bintray
        shell: bash
        run: |
          curl -sfSLO 'https://raw.githubusercontent.com/Ortham/ci-scripts/2.1.4/delete_old_bintray_versions.py'
          python3 delete_old_bintray_versions.py -g loot/libloot -b loot/snapshots/libloot -u wrinklyninja -k ${{ secrets.BINTRAY_API_KEY }} -t ${{ secrets.GITHUB_TOKEN }} -n 30
        if: github.event_name == 'push'

  windows:
    runs-on: windows-2016

    strategy:
      matrix:
        platform: [Win32, x64]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cbindgen
        id: cache-cbindgen
        uses: actions/cache@v2
        with:
          path: ~/.cargo/bin/cbindgen.exe
          key: ${{ runner.os }}-cbindgen-${{ env.CBINDGEN_VERSION }}

      - name: Install Rust i686-pc-windows-msvc target
        run: rustup target add i686-pc-windows-msvc

      - name: Install cbindgen
        run: |
          cargo install cbindgen --version ${{ env.CBINDGEN_VERSION }}
          echo "~/.cargo/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        if: steps.cache-cbindgen.outputs.cache-hit != 'true'

      - name: Get descriptive libloot version
        id: get-libloot-version
        shell: bash
        run: |
          GIT_DESCRIBE=$(git describe --tags --long --abbrev=7)
          GIT_REF=${{ github.ref }}
          LIBLOOT_DESC_REF=${GIT_DESCRIBE}_${GIT_REF#refs/*/}
          LIBLOOT_SAFE_DESC_REF=${LIBLOOT_DESC_REF//[\/<>\"|]/_}
          echo "::set-output name=version::$LIBLOOT_SAFE_DESC_REF"

      - name: Run CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 15 2017" -A ${{ matrix.platform }} -DBOOST_ROOT="${env:BOOST_ROOT_1_72_0}" -DCPACK_PACKAGE_VERSION="${{ steps.get-libloot-version.outputs.version }}"
          cmake --build . --config ${{ env.MSVC_CONFIG }}

      - name: Run tests
        run: |
          cd build/${{ env.MSVC_CONFIG }}
          git config --global user.email "github@github-actions"
          git config --global user.name "GitHub"
          .\libloot_internals_tests.exe
          .\libloot_tests.exe

      - name: Install packages for building docs
        run: |
          nuget install doxygen -Version 1.8.14
          echo "${{ github.workspace }}\Doxygen.1.8.14\tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          python -m pip install -r docs/requirements.txt

      - name: Build docs
        run: sphinx-build -b html docs build\docs\html

      - name: Build archive
        id: build-archive
        shell: bash
        run: |
          cd build
          cpack -C ${{ env.MSVC_CONFIG }}

          VERSION="${{ steps.get-libloot-version.outputs.version }}"
          if [[ "${{ matrix.platform }}" == "Win32" ]]
          then
            PLATFORM=win32
          else
            PLATFORM=win64
          fi

          echo "::set-output name=filename::libloot-${VERSION}-${PLATFORM}.7z"

      - name: Upload archive to BinTray
        shell: bash
        run: |
          VERSION="${{ steps.get-libloot-version.outputs.version }}"
          FILENAME="${{ steps.build-archive.outputs.filename }}"
          curl -sfSL -T "build/package/$FILENAME" -u "wrinklyninja:${{ secrets.BINTRAY_API_KEY }}" "https://bintray.com/api/v1/content/loot/snapshots/libloot/${VERSION}/${FILENAME}?publish=1&override=1"
        if: github.event_name == 'push'
